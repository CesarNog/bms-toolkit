# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
  - name: Validate OS and version
    assert:
      that:
        - "ansible_os_family == '{{ os_family_supported }}'"
        - "ansible_distribution_version is version_compare('{{ os_min_supported_version }}', '>=')"
    tags: oscheck

  - name: Validate architecture
    assert:
      that: "ansible_userspace_architecture == 'x86_64'"
    tags: oscheck

  - name: Ensure yum is not running, send Ctrl-C if it is
    shell: pidof -x /usr/bin/yum /bin/yum | xargs -t -r -n 1 kill -INT
    tags: os_packages

  - name: Remove Chrony package
    package:
      name:  chrony
      state: absent
      lock_timeout: 180
    tags: ntp

  - name: Remove Chrony rpmsave
    file:
      path: /etc/chrony.conf.rpmsave
      state: absent
    tags: ntp

  - name: Install base OS packages
    package:
      name: "{{ packages }}"
      state: present
      lock_timeout: 180
    tags: os_packages

  - name: Make sure ntp is running
    service:
      name: ntpd
      state: started
      enabled: yes
    tags: ntp

  - name: Add ntp preferred server
    blockinfile:
      path: /etc/ntp.conf
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      insertafter: '^server '
      block: "server {{ ntp_preferred }} prefer iburst"
      state: "{{ (ntp_preferred != \"\" ) | ternary('present', 'absent') }}"
    notify: restart ntpd

#  - name: Check dns for host
#    command: nslookup {{ ansible_hostname }}
#    register: ns
#    ignore_errors: true
#    changed_when: false
#    tags: etchosts

  # cleanup /etc/hosts to solve a listener related issue, ora listener binds to hostname's IP.
  - name: Remove all 127.0.0.1 lines from /etc/hosts
    lineinfile: dest=/etc/hosts regexp='^127\.0\.0\.1' state=absent
    tags: etchosts

  - name: Add fqdn to /etc/hosts if needed
    lineinfile: dest=/etc/hosts regexp='.*{{ ansible_fqdn }}$' line="{{ etc_hosts_ip }} {{ ansible_hostname }} {{ ansible_fqdn }}" state=present
    #when: "(': NXDOMAIN' in ns.stdout) or (' No answer' in ns.stdout)"
    tags: etchosts

  - name: Add localhost to /etc/hosts if needed
    lineinfile: dest=/etc/hosts regexp='^127\.0\.0\.1' line="127.0.0.1 localhost localhost.localdomain" state=present
    #when: "(': NXDOMAIN' in ns.stdout) or (' No answer' in ns.stdout)"
    tags: etchosts

#  - name: Generate /etc/hosts
#    template:
#      src: etc-hosts.j2
#      dest: /etc/hosts
#      backup: false
#    tags: etchosts
#    ignore_errors: true
#    #notify: restart dnsmasq

#  - name: Generate /etc/resolv.conf
#    template:
#      src: resolv.conf.j2
#      dest: /etc/resolv.conf
#      backup: false
#    tags: resolv_conf
#    ignore_errors: true
#    notify: restart dnsmasq

#  - name: Generate dnsmasq config
#    template:
#      src: dnsmasq.conf.j2
#      dest: /etc/dnsmasq.conf
#      backup: true
#    ignore_errors: true
#    tags: dnsmasq
#    notify: restart dnsmasq

#  - name: Start and enable dnsmasq
#    service:
#      name: dnsmasq
#      state: started
#      enabled: true
#    tags: dnsmasq

  - name: prep host | create swap on GCE
    include_tasks: swap.yml
    when:
      - ansible_system_vendor == "Google"
      - ansible_virtualization_type == "kvm"
      - ansible_virtualization_role == "guest"
      - swap_blk_device is defined
